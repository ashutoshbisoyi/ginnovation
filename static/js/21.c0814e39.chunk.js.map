{"version":3,"sources":["Components/UiComponents/ProfilePage/ProjectCard.js","Components/PageComponets/AllProjects.js"],"names":["ProjectCard","props","link","projectLink","embedLink","slice","join","description","className","width","height","src","frameBorder","allow","style","color","backgroundColor","teamName","title","subtitle","href","abstractLink","target","AllProjects","useState","data","setdata","spin","setspin","useEffect","axios","get","then","resp","console","log","projects","catch","err","name","content","size","gutter","map","value","index","md","projectTitle","projectSubTitle","desc"],"mappings":"iJAwCeA,IArCK,SAACC,GACnB,IAAMC,EAAOD,EAAME,YACbC,EAAY,CAACF,EAAKG,MAAM,EAAG,IAAK,gBAAiBH,EAAKG,MAAM,KAAKC,KACrE,IAEIC,EAAcN,EAAMM,YAAYF,MAAM,EAAG,KAAO,MACtD,OACE,qBAAKG,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACEC,MAAM,MACNC,OAAO,MACPC,IAAKP,EACLQ,YAAY,IACZC,MAAM,+FAGV,sBAAKL,UAAU,OAAf,UACE,cAAC,IAAD,CACEA,UAAU,SACVM,MAAO,CAAEC,MAAO,UAAWC,gBAAiB,WAF9C,eAMA,6BAAKf,EAAMgB,cAEb,6BAAKhB,EAAMiB,QACX,mBAAGV,UAAU,WAAb,SAAyBP,EAAMkB,WAC/B,4BAAIZ,IACJ,mBAAGa,KAAMnB,EAAMoB,aAAcC,OAAO,SAApC,SACE,mE,iICiCKC,UA7DK,WAAO,IAAD,EACAC,qBADA,mBACjBC,EADiB,KACXC,EADW,OAEAF,oBAAS,GAFT,mBAEjBG,EAFiB,KAEXC,EAFW,KAiBxB,OAdAC,qBAAU,WACRD,GAAQ,GACRE,IACGC,IAAI,wDACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAKR,KAAK,GAAGW,UACzBR,GAAQ,GACRF,EAAQO,EAAKR,KAAK,GAAGW,aAEtBC,OAAM,SAACC,GACNV,GAAQ,GACRM,QAAQC,IAAIG,QAEf,IAED,sBAAK9B,UAAU,YAAf,UACE,eAAC,IAAD,WACE,gEACA,sBACE+B,KAAK,cACLC,QAAQ,mKAGXb,GACC,qBAAKnB,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMiC,KAAK,YAGf,qBAAKjC,UAAU,qCAAf,SACE,mCACE,kDACA,0EAGJ,qBAAKA,UAAU,2BAAf,SACGiB,GACC,cAAC,IAAD,CAAKiB,OAAQ,EAAb,SACGjB,EAAKkB,KAAI,SAACC,EAAOC,GAChB,OACE,cAAC,IAAD,CAAKC,GAAI,EAAT,SACE,cAAC,IAAD,CACE5B,MAAO0B,EAAMG,aACb5B,SAAUyB,EAAMI,gBAChB/B,SAAU2B,EAAM3B,SAChBV,YAAaqC,EAAMK,KACnB9C,YAAayC,EAAMzC,YACnBkB,aAAcuB,EAAMvB,gBAPPwB","file":"static/js/21.c0814e39.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n//-----------------------------------------------------------------\r\nconst ProjectCard = (props) => {\r\n  const link = props.projectLink;\r\n  const embedLink = [link.slice(0, 13), 'be.com/embed/', link.slice(17)].join(\r\n    ''\r\n  );\r\n  const description = props.description.slice(0, 100) + '...';\r\n  return (\r\n    <div className='video-cards'>\r\n      <div className='card-info'>\r\n        <div className='youtube-video-container'>\r\n          <iframe\r\n            width='560'\r\n            height='315'\r\n            src={embedLink}\r\n            frameBorder='0'\r\n            allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n          ></iframe>\r\n        </div>\r\n        <div className='name'>\r\n          <Avatar\r\n            className='avatar'\r\n            style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}\r\n          >\r\n            P\r\n          </Avatar>\r\n          <h6>{props.teamName}</h6>\r\n        </div>\r\n        <h5>{props.title}</h5>\r\n        <p className='subtitle'>{props.subtitle}</p>\r\n        <p>{description}</p>\r\n        <a href={props.abstractLink} target='_blank'>\r\n          <button>See Project Abstract</button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectCard;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Spin } from 'antd';\r\nimport ProjectCard from '../UiComponents/ProfilePage/ProjectCard';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst AllProjects = () => {\r\n  const [data, setdata] = useState();\r\n  const [spin, setspin] = useState(false);\r\n  useEffect(() => {\r\n    setspin(true);\r\n    axios\r\n      .get('https://ginnovation-server.herokuapp.com/api/project')\r\n      .then((resp) => {\r\n        console.log(resp.data[0].projects);\r\n        setspin(false);\r\n        setdata(resp.data[0].projects);\r\n      })\r\n      .catch((err) => {\r\n        setspin(false);\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className='all-blogs'>\r\n      <Helmet>\r\n        <title>Projects - Ginnovation Club</title>\r\n        <meta\r\n          name='description'\r\n          content='Ginnovation club has well understood the importance of practical learning and continuously working with the students to make more future oriented projects.'\r\n        />\r\n      </Helmet>\r\n      {spin && (\r\n        <div className='modal-container'>\r\n          <Spin size='large' />\r\n        </div>\r\n      )}\r\n      <div className='page-top-secondVarient project-top'>\r\n        <header>\r\n          <h2>Student Projects</h2>\r\n          <p>Creative implementations of learning</p>\r\n        </header>\r\n      </div>\r\n      <div className='container blog-container'>\r\n        {data && (\r\n          <Row gutter={8}>\r\n            {data.map((value, index) => {\r\n              return (\r\n                <Col md={8} key={index}>\r\n                  <ProjectCard\r\n                    title={value.projectTitle}\r\n                    subtitle={value.projectSubTitle}\r\n                    teamName={value.teamName}\r\n                    description={value.desc}\r\n                    projectLink={value.projectLink}\r\n                    abstractLink={value.abstractLink}\r\n                  />\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllProjects;\r\n"],"sourceRoot":""}